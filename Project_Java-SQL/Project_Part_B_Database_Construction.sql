-- Δημιουργία βάσης --
-- CREATE DATABASE PROJECT_PART_B;

-- USE PROJECT_PART_B;

-- Δημιουργία πίνακα STUDENT --
-- CREATE TABLE STUDENT (
-- 		STUDENT_ID INT NOT NULL,
--     	FIRST_NAME VARCHAR(45) NOT NULL,
-- 		LAST_NAME VARCHAR(45) NOT NULL,
--     	DATE_OF_BIRTH DATE NOT NULL,
--     	TUITION_FEES DECIMAL(8,2) NOT NULL,   
--     	PRIMARY KEY (STUDENT_ID)
--  );

   -- Δημιουργία πίνακα COURSE --
-- CREATE TABLE COURSE (
-- 		COURSE_ID INT NOT NULL,
--    	STREAM VARCHAR(45) NOT NULL,
--      TYPE VARCHAR(45) NOT NULL,
--    	START_DATE DATE NOT NULL,
-- 		END_DATE DATE NOT NULL,
--     	PRIMARY KEY (COURSE_ID)
--  );

-- Δημιουργία πίνακα Assignment --
-- CREATE TABLE ASSIGNMENT (
-- 		ASSIGNMENT_ID INT NOT NULL,
-- 		TITTLE VARCHAR(30) NOT NULL,
--  	DESCRIPTION VARCHAR(200) NOT NULL,
--  	SUB_DATE_TIME TIMESTAMP NOT NULL,
-- 		COURSE_ID INT NOT NULL,
--  	PRIMARY KEY (ASSIGNMENT_ID),
-- 		FOREIGN KEY (COURSE_ID)
-- 		REFERENCES COURSE (COURSE_ID)
-- );    

    -- Δημιουργία πίνακα TRAINER --
 -- CREATE TABLE TRAINER (
-- 		   TRAINER_ID INT NOT NULL,
--         FIRST_NAME VARCHAR(45) NOT NULL,
--         LAST_NAME VARCHAR(45) NOT NULL,
--         SUBJECT VARCHAR(60) NOT NULL,
--         COURSE_ID INT NOT NULL,
--         PRIMARY KEY (TRAINER_ID),
--         FOREIGN KEY (COURSE_ID)
--         REFERENCES COURSE (COURSE_ID)
--     );
  
   
-- Δημιουργία πίνακα ASSIGNMENT PER STUDENT --
-- CREATE TABLE ASSIGNMENT_PER_STUDENT (
-- 	    ASSIGNMENT_ID INT NOT NULL,
--      STUDENT_ID INT NOT NULL,     
--      PRIMARY KEY (ASSIGNMENT_ID, STUDENT_ID),
--      FOREIGN KEY (ASSIGNMENT_ID)
--      REFERENCES ASSIGNMENT (ASSIGNMENT_ID),
--      FOREIGN KEY (STUDENT_ID)
--      REFERENCES STUDENT (STUDENT_ID)
--     ); 

    -- Δημιουργία πίνακα STUDENT PER COURSE --
-- CREATE TABLE STUDENT_PER_COURSE (
-- 	   STUDENT_ID INT NOT NULL,
--     COURSE_ID INT NOT NULL,
--     PRIMARY KEY (STUDENT_ID, COURSE_ID),
--     FOREIGN KEY (STUDENT_ID)
--     REFERENCES STUDENT (STUDENT_ID),
--     FOREIGN KEY (COURSE_ID)
--     REFERENCES COURSE (COURSE_ID)
--  );
    
    -- Δημιουργία πίνακα ASSIGNMENT PER COURSE PER STUDENT -- 
  -- CREATE TABLE ASSIGNMENT_PER_COURSE_PER_STUDENT (
-- 		   COURSE_ID INT NOT NULL,
--         STUDENT_ID INT NOT NULL,
--         ASSIGNMENT_ID INT NOT NULL,
--         PRIMARY KEY (COURSE_ID, STUDENT_ID, ASSIGNMENT_ID),
--         FOREIGN KEY (COURSE_ID)
--         REFERENCES COURSE (COURSE_ID),
--         FOREIGN KEY (STUDENT_ID)
--         REFERENCES STUDENT (STUDENT_ID),
--         FOREIGN KEY (ASSIGNMENT_ID)
--         REFERENCES ASSIGNMENT (ASSIGNMENT_ID)       
--     );


   
     -- Γέμισμα πινάκων
     -- Προσθήκη STUDENT
-- INSERT INTO STUDENT VALUES (100, 'MANOLIS', 'MPAKODIMOS', '1985-12-04', 2500);      
-- INSERT INTO STUDENT VALUES (101, 'MIXALIS', 'PAPAMIXAIL', '1990-11-04', 2500);      
-- INSERT INTO STUDENT VALUES (102, 'PETROS', 'PAPANDREOU', '1994-10-04', 2100);      
-- INSERT INTO STUDENT VALUES (103, 'THANASIS', 'PAPADOPOYLOS', '1995-07-04', 2500);      
-- INSERT INTO STUDENT VALUES (104, 'ELENI', 'MPAKODIMOY', '1990-12-05', 2500);      
-- INSERT INTO STUDENT VALUES (105, 'MAGDA', 'KARATHANASIS', '1987-06-04', 2100);      
-- INSERT INTO STUDENT VALUES (106, 'ALEXANDROS', 'KARAMANOS', '1983-04-04', 2500);      
-- INSERT INTO STUDENT VALUES (107, 'DIMITRIS', 'KONSTANTIOS', '1987-03-04', 0);      
-- INSERT INTO STUDENT VALUES (108, 'MIXALIS', 'KARAPANOY', '1982-12-01', 2100);      
-- INSERT INTO STUDENT VALUES (109, 'FOTIS', 'MOSXONISIOTIS', '1991-12-04', 2500);      
   
    -- Προσθήκη COURSE
-- INSERT INTO COURSE VALUES (1, 'JAVA', 'FULL TIME', '2019-10-14', '2020-01-14');     
-- INSERT INTO COURSE VALUES (2, 'JAVA', 'PART TIME', '2019-10-14', '2020-03-14');
-- INSERT INTO COURSE VALUES (3, 'C#', 'FULL TIME', '2019-10-14', '2020-01-14');
-- INSERT INTO COURSE VALUES (4, 'C#', 'PART TIME', '2019-10-14', '2020-01-14');
    
     -- Προσθήκη TRAINER
--  INSERT INTO TRAINER VALUES ('1', 'MIXALIS', 'IGNATIOY', 'JAVA', 1);
--  INSERT INTO TRAINER VALUES ('2', 'PETROS', 'PAPADOPOULOS', 'C#', 2);
--  INSERT INTO TRAINER VALUES ('3', 'XRISTOS', 'NIKOLAOU', 'DATABASES', 3);
--  INSERT INTO TRAINER VALUES ('4', 'GIORGOS', 'KARAMANOS', 'FROND END', 4);
--  INSERT INTO TRAINER VALUES ('5', 'THEODOROS', 'KARATHANOS', 'JAVA', 1);
--  INSERT INTO TRAINER VALUES ('6', 'PERIKLIS', 'BASILIOU', 'C#', 4);
--  INSERT INTO TRAINER VALUES ('7', 'MANOLIS', 'XRISTOPOULOS', 'JAVA', 3);
--  INSERT INTO TRAINER VALUES ('8', 'SOTIRIS', 'LAMPROU', 'FROND END', 2);
--  INSERT INTO TRAINER VALUES ('9', 'MARIA', 'KOSTOPOULOS', 'JAVA', 1);
--  INSERT INTO TRAINER VALUES ('10', 'KOSTAS', 'KITSAKIS', 'DATABASES', 3);
 
  -- Προσθήκη ASSIGNMENT
-- INSERT INTO ASSIGNMENT VALUES ('1', 'JAVA PART A', 'INDIVIDUAL JAVA PART A', '2019-11-29 23:59:59.00',1);
-- INSERT INTO ASSIGNMENT VALUES ('2', 'JAVA SQL PART A', 'INDIVIDUAL JAVA SQL PART A', '2019-12-31 23:59:59.00',1);
-- INSERT INTO ASSIGNMENT VALUES ('3', 'JAVA FROND END PART A', 'INDIVIDUAL JAVA FROND END PART A', '2019-01-31 23:59:59.00',1);
-- INSERT INTO ASSIGNMENT VALUES ('4', 'JAVA PART B', 'COOPERATIVE JAVA PART B', '2020-02-29 23:59:59.00',2);
-- INSERT INTO ASSIGNMENT VALUES ('5', 'JAVA SQL PART B', 'COOPERATIVE JAVA SQL PART B', '2020-03-31 23:59:59.00',2);
-- INSERT INTO ASSIGNMENT VALUES ('6', 'JAVA FROND PART B', 'COOPERATIVE JAVA FROND END PART B', '2020-04-30 23:59:59.00',2);
-- INSERT INTO ASSIGNMENT VALUES ('7', 'C# PART A', 'INDIVIDUAL C# PART A', '2019-11-29 23:59:59.00',3);
-- INSERT INTO ASSIGNMENT VALUES ('8', 'C# SQL PART A', 'INDIVIDUAL C# SQL PART A', '2019-12-31 23:59:59.00',3);
-- INSERT INTO ASSIGNMENT VALUES ('9', 'C# FROND END PART A', 'INDIVIDUAL C# FROND END PART A', '2019-01-31 23:59:59.00',3);
-- INSERT INTO ASSIGNMENT VALUES ('10', 'C# PART B', 'COOPERATIVE C# PART B', '2020-02-29 23:59:59.00',4);
-- INSERT INTO ASSIGNMENT VALUES ('11', 'C# SQL PART B', 'COOPERATIVE C# SQL PART B', '2020-03-31 23:59:59.00',4);
-- INSERT INTO ASSIGNMENT VALUES ('12', 'C# FROND PART B', 'COOPERATIVE C# FROND END PART B', '2020-04-30 23:59:59.00',4);



  -- Προσθήκη STUDENT PER COURSE
--   INSERT INTO STUDENT_PER_COURSE VALUES (100, 1);
--   INSERT INTO STUDENT_PER_COURSE VALUES (101, 1);
--   INSERT INTO STUDENT_PER_COURSE VALUES (102, 1);
--   INSERT INTO STUDENT_PER_COURSE VALUES (103, 2);
--   INSERT INTO STUDENT_PER_COURSE VALUES (104, 2);
--   INSERT INTO STUDENT_PER_COURSE VALUES (105, 3);
--   INSERT INTO STUDENT_PER_COURSE VALUES (106, 3);
--   INSERT INTO STUDENT_PER_COURSE VALUES (107, 3);
--   INSERT INTO STUDENT_PER_COURSE VALUES (108, 4);
--   INSERT INTO STUDENT_PER_COURSE VALUES (109, 4);


 -- Προσθήκη ASSIGNMENT_PER_COURSE_PER_STUDENT
 -- INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (1, 100, 2);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (1, 102, 1);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (2, 103, 4);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (2, 104, 6);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (3, 105, 7);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (3, 106, 8);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (3, 107, 9);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (4, 108, 10);
--  INSERT INTO ASSIGNMENT_PER_COURSE_PER_STUDENT VALUES (4, 109, 11);
 
 
	-- A list of all the students
-- SELECT *
--  FROM STUDENT; 

	-- A list of all the trainers
-- SELECT *
-- FROM TRAINER;

	-- A list of all the assignments
-- SELECT *
-- FROM ASSIGNMENT;

	-- A list of all the courses
-- SELECT *
-- FROM COURSE;

	-- All the students per course
-- SELECT ST.STUDENT_ID, ST.FIRST_NAME, ST.LAST_NAME, ST.DATE_OF_BIRTH, C.COURSE_ID, C.STREAM, C.TYPE, C.START_DATE, C.END_DATE
-- FROM STUDENT ST, COURSE C, STUDENT_PER_COURSE SPC
-- WHERE ST.STUDENT_ID = SPC.STUDENT_ID
-- AND C.COURSE_ID = SPC.COURSE_ID;

	-- All the trainers per course
-- SELECT T.TRAINER_ID, T.FIRST_NAME, T.LAST_NAME, T.SUBJECT, C.COURSE_ID, C.STREAM, C.TYPE, C.START_DATE, C.END_DATE
-- FROM TRAINER T, COURSE C 
-- WHERE T.COURSE_ID = C.COURSE_ID;

-- All the assignments per course        
-- SELECT A. ASSIGNMENT_ID, A.TITTLE, A.SUB_DATE_TIME,C.COURSE_ID, C.STREAM, C.TYPE 
-- FROM ASSIGNMENT A, COURSE C
-- WHERE A.COURSE_ID = C.COURSE_ID;
  
  
  -- All the assignments per course per student
-- 		SELECT S.STUDENT_ID, S.FIRST_NAME, S.LAST_NAME, C.COURSE_ID, C.STREAM, C.TYPE, A.ASSIGNMENT_ID, A.TITTLE, A.SUB_DATE_TIME
--      FROM STUDENT S, COURSE C, ASSIGNMENT A, ASSIGNMENT_PER_COURSE_PER_STUDENT APCS
--      WHERE A.ASSIGNMENT_ID = APCS.ASSIGNMENT_ID
--      AND C.COURSE_ID = APCS.COURSE_ID
--      AND S.STUDENT_ID = APCS.STUDENT_ID;
     
    
